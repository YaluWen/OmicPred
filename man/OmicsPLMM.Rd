R
% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/WrapFun.R
\name{OmicsPLMM}
\alias{OmicsPLMM}
\title{Genetic Risk Prediction Using a Multi-Kernel Linear Mixed Model with Adaptive Lasso}
\usage{
OmicsPLMM(OmicsData = list(), OmicsDataMap = list(), phenofile,
  trainID, OmicsKernelMatrix = list(), annotation = NULL, Y = NULL,
  X = NULL, kernelsrOmics = NA, AllRegions = 0, stdData = TRUE,
  predict = FALSE, weight.fixed = NULL, weight.random = NULL,
  maxiter = 1000, outputall = FALSE)
}
\arguments{
\item{OmicsData}{A list with each element representing data from one omic. Each row is an observations, and each column is the variants. NA represents missing. For the subject with missing omcis, then the subject should be in the corresponding omic, but with missing entry.}

\item{OmicsDataMap}{A list with each element represent data annotation from one omic. The row is variants, and column is the annoation. It should have at least 2 columns ("chromosome","position"). The number of rows should be the same as the number of columns in the corresponding omic data}

\item{phenofile}{The file containing phenotype information. If provided, will ignore the affected values from the .fam file. The file should contain two columns: pheno: phenotypic values. ID: subject ID for each indidivuals.}

\item{trainID}{Subject ID for the training individuals.}

\item{annotation}{A data frame providing information to cut the genomes. It has at least four columns: gene, chr, start, end. The gene column must be unique. The other three columns contain information about chromosome, start and end of each regomic region. If Kinship is not provided, then annotation must be provided.}

\item{Y}{A vector of phenotypes with each name being subject ID. If provided, will ignore \code{phenofile}.}

\item{X}{A matrix of demographic variables, should be of the same order as Y (i.e. \code{rownames(X)=names(Y)}). The intercept column is not needed.}

\item{stdData}{A bool to indicate whether data should be centered and scaled with sd=1. Default=TRUE.}

\item{predict}{A bool indicating if prediction is needed. Default is FALSE.}

\item{weight.fixed}{Weight that one wants to assign to covariate. Default is NULL.}

\item{weight.random}{Weight that one wants to assign to random effect. This should be as the same number of random effects included in the model. Suggest to give NULL, and default is NULL.}

\item{maxiter}{Maximum number of iterations. Default is 1000.}

\item{outputall}{Controls the details of output. \code{outputall=0}, only the prediction and original outputs are saved.  \code{outputall=1}, in addition to the above, the model fit is also saved. \code{outputall=2}, in addition to the above, the similarity matrix is also save (can be large, not suggested).}

\item{OmicsDataMap}{A list with each element represent data annotation from one omic. The rows is variants, and column is the annoation. It should have at least 2 columns ("chromosome","position"). The number of rows should be the same as the number of columns in the corresponding omic data}

\item{kernelsOmics}{kernels used for other omic data. Currently, it only takes linear kernel for non-genomic data. For genomic data, it can take linear and IBS.  Its length should be the same to the number of omics data if provided.}

\item{AllRegion}{A bool to indicate whether GSM should be calculated from the entire genome. Default=0.}
}
\value{
A list that contrails original output and the predicted value (if any). The other output is controlled by \code{outputall}.
}
\description{
\code{OmicsPLMM} prepares the data for analyses
}
\details{
This function is used to pre-process the data used by the Multi-Kernel Linear Mixed Model with Adaptive Lasso method.
}
\examples{
## Using the data with pre-calculated GSMs ##
load(system.file("extdata", "Data.rda", package = "KLMMAL"))

## read both genotype and phenotype files from the disk, and calculate the GSMs using linear kernels ##
trainID=read.table(system.file("extdata", "TrainID.txt", package = "KLMMAL"));
annotation=read.table(system.file("extdata", "Annotation.txt", package = "KLMMAL"),header=T);
Data=ReadKLMM(bed=system.file("extdata", "testing.bed", package = "KLMMAL"),trainID=trainID[,1], annotation = annotation, phenofile=system.file("extdata", "pheno.txt", package = "KLMMAL"), kernels = c("linear"), AllRegions = 0);

## read genotype from the disk and calculate the GSMs using linear and poly2 kernels##
pheno=read.table(system.file("extdata", "pheno.txt", package = "KLMMAL"),header=T);
Y=pheno$pheno;names(Y)=pheno$ID;
trainID=read.table(system.file("extdata", "TrainID.txt", package = "KLMMAL"));
annotation=read.table(system.file("extdata", "Annotation.txt", package = "KLMMAL"),header=T);
Data=ReadKLMM(bed=system.file("extdata", "testing.bed", package = "KLMMAL"),trainID=trainID[,1], annotation = annotation, Y = Y, kernels = c("linear", "poly2"), AllRegions = 0);
}
